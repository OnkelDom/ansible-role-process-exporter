---
- name: create system group
  group:
    name: "{{ process_exporter_system_group }}"
    system: true
    state: present
  when: process_exporter_system_group != "root"
  become: true
  tags: process_exporter

- name: create system user
  user:
    name: "{{ process_exporter_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ process_exporter_system_group }}"
    createhome: false
  when: process_exporter_system_user != "root"
  become: true
  tags: process_exporter

- name: create data directory
  file:
    path: "{{ process_exporter_config_dir }}"
    state: directory  
    owner: "{{ process_exporter_system_user }}"
    group: "{{ process_exporter_system_group }}"
    mode: 0755
  become: true
  tags: process_exporter

- name: check if process_exporter is installed
  stat:
    path: "{{ process_exporter_binary_install_dir }}/process_exporter"
  register: __process_exporter_is_installed
  become: true
  tags: process_exporter

- name: gather currently installed process_exporter version (if any)
  command: "{{ process_exporter_binary_install_dir }}/process_exporter -version"
  args:
    warn: false
  changed_when: false
  register: __process_exporter_current_version_output
  when: __process_exporter_is_installed.stat.exists
  become: true
  tags: process_exporter

- block:
  - name: get latest release
    uri:
      url: "https://api.github.com/repos/ncabatoff/process-exporter/releases/latest"
      method: GET
      return_content: true
      status_code: 200
      body_format: json
      validate_certs: false
      user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
      password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
    environment: "{{ proxy_env }}"
    no_log: true
    register: _latest_release
    until: _latest_release.status == 200
    retries: 5
    become: true
    tags: process_exporter

  - name: "set version to {{ _latest_release.json.tag_name[1:] }}"
    set_fact:
      process_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
    become: true
    tags: process_exporter
  when: process_exporter_version == "latest"
  delegate_to: localhost
  run_once: true

- block:
  - name: get checksum list from github
    set_fact:
      _checksums: "{{ lookup('url', 'https://github.com/ncabatoff/process-exporter/releases/download/v' + process_exporter_version + '/' + 'process-exporter_' + process_exporter_version + '_checksums.txt', wantlist=True) | list }}"
    environment: "{{ proxy_env }}"
    run_once: true
    become: true
    tags: process_exporter

  - name: "get checksum for {{ go_arch }} architecture"
    set_fact:
      process_exporter_checksum: "{{ item.split(' ')[0] }}"
    with_items: "{{ _checksums }}"
    when: "('linux-' + go_arch + '.tar.gz') in item"
    become: true
    tags: process_exporter

  - name: download binary to local folder
    get_url:
      url: "https://github.com/ncabatoff/process-exporter/releases/download/v{{ process_exporter_version }}/process-exporter-{{ process_exporter_version }}.linux-{{ go_arch }}.tar.gz"
      dest: "/tmp/process-exporter-{{ process_exporter_version }}.linux-{{ go_arch }}.tar.gz"
      checksum: "sha256:{{ process_exporter_checksum }}"
    environment: "{{ proxy_env }}"
    register: _download_binary
    until: _download_binary is succeeded
    retries: 5
    delay: 2
    delegate_to: localhost
    check_mode: false
    become: true
    tags: process_exporter

  - name: unpack binary
    unarchive:
      src: "/tmp/process-exporter-{{ process_exporter_version }}.linux-{{ go_arch }}.tar.gz"
      dest: "/tmp"
      creates: "/tmp/process-exporter-{{ process_exporter_version }}.linux-{{ go_arch }}/process-exporter"
    delegate_to: localhost
    check_mode: false
    become: true
    tags: process_exporter

  - name: propagate binaries
    copy:
      src: "/tmp/process-exporter-{{ process_exporter_version }}.linux-{{ go_arch }}/process-exporter"
      dest: "{{ process_exporter_binary_install_dir }}/process_exporter"
      mode: 0755
      owner: root
      group: root
    notify: restart process_exporter
    when: not ansible_check_mode
    become: true
    tags: process_exporter
  when: (not __process_exporter_is_installed.stat.exists) or (__process_exporter_current_version_output.stderr_lines[0].split(" ")[2] != process_exporter_version)

- name: create/update configuration file
  copy:
    dest: "{{ process_exporter_config_dir }}/config.yml"
    content: |
      process_names:
      {{ process_exporter_names }}
    backup: false
    owner: "{{ process_exporter_system_user }}"
    group: "{{ process_exporter_system_group }}"
    mode: 0644
  when: process_exporter_names != []
  notify: reload process_exporter
  become: true
  tags: process_exporter

- name: copy consul-agent service json
  template:
    src: consul_agent_service.json.j2
    dest: /etc/consul/process_exporter.json
    owner: consul
    group: consul
    mode: 0644
  when: process_exporter_create_consul_agent_service
  notify: reload consul
  become: true
  tags: process_exporter

- name: copy systemd service file
  template:
    src: process_exporter.service.j2
    dest: /etc/systemd/system/process_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart process_exporter
  become: true
  tags: process_exporter

- name: ensure process_exporter is enabled on boot
  systemd:
    daemon_reload: true
    name: process_exporter
    enabled: true
  become: true
  tags: process_exporter
